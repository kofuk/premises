// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kofuk/premises/runner/internal/env (interfaces: PathProvider)
//
// Generated by this command:
//
//	mockgen -destination path_mock.go -package env . PathProvider
//

// Package env is a generated GoMock package.
package env

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPathProvider is a mock of PathProvider interface.
type MockPathProvider struct {
	ctrl     *gomock.Controller
	recorder *MockPathProviderMockRecorder
	isgomock struct{}
}

// MockPathProviderMockRecorder is the mock recorder for MockPathProvider.
type MockPathProviderMockRecorder struct {
	mock *MockPathProvider
}

// NewMockPathProvider creates a new mock instance.
func NewMockPathProvider(ctrl *gomock.Controller) *MockPathProvider {
	mock := &MockPathProvider{ctrl: ctrl}
	mock.recorder = &MockPathProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPathProvider) EXPECT() *MockPathProviderMockRecorder {
	return m.recorder
}

// GetDataPath mocks base method.
func (m *MockPathProvider) GetDataPath(path ...string) string {
	m.ctrl.T.Helper()
	varargs := []any{}
	for _, a := range path {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetDataPath", varargs...)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetDataPath indicates an expected call of GetDataPath.
func (mr *MockPathProviderMockRecorder) GetDataPath(path ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataPath", reflect.TypeOf((*MockPathProvider)(nil).GetDataPath), path...)
}

// GetTempDir mocks base method.
func (m *MockPathProvider) GetTempDir() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTempDir")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetTempDir indicates an expected call of GetTempDir.
func (mr *MockPathProviderMockRecorder) GetTempDir() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTempDir", reflect.TypeOf((*MockPathProvider)(nil).GetTempDir))
}

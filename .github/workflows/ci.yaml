name: CI
on: push

env:
  NODE_VERSION: 20

jobs:
  test-mcmanager:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mcmanager
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.17'
      - name: Run test
        run: go test -v ./...

  check-format-home-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./home
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('home/package-lock.json') }}
      - name: Check code formatted
        run: |
          set -euo pipefail
          npm ci
          npm run fmt:check

  check-format-e2e:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./e2e-tests
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('e2e-tests/package-lock.json') }}
      - name: Check code formatted
        run: |
          set -euo pipefail
          npm ci
          npm run fmt:check

  test-home-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./home
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: home/go.mod
          cache-dependency-path: |
            home/go.sum
      - name: Run test
        run: go test -v ./...

  build-mcmanager:
    needs:
      - test-mcmanager
      - check-format-home-frontend
      - test-home-backend
    uses: ./.github/workflows/build-mcmanager.yaml

  build-home:
    needs:
      - test-mcmanager
      - check-format-home-frontend
      - test-home-backend
    uses: ./.github/workflows/build-control-panel.yaml
    with:
      tag: ghcr.io/kofuk/premises:latest

  publish-mcmanager:
    runs-on: ubuntu-latest
    needs: build-mcmanager
    if: github.ref_name == 'master'
    steps:
      - name: Install Required Packages
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y tar xz-utils
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: mcmanager
      - name: Create Archive
        run : tar -cJf premises-mcmanager.tar.xz premises-mcmanager
      - name: Generate Metadata
        run: |
          echo "$(head -c7 <<<${{ github.sha }})	$(sha512sum premises-mcmanager | cut -d\  -f1)" >metadata.txt
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
      - uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: premises-mcmanager.tar.xz
          destination: premises-artifacts
          parent: false
          process_gcloudignore: false
      - uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: metadata.txt
          destination: premises-artifacts
          parent: false
          process_gcloudignore: false


  publish-home-docker-image:
    runs-on: ubuntu-latest
    needs: build-home
    if: github.ref_name == 'master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: control-panel-image
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Load image
        run: docker load --input image.tar
      - name: Push image
        run: docker push ghcr.io/kofuk/premises:latest

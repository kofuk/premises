name: Build and Publish
on: push

jobs:
  go-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Check format
        run: |
          set -euo pipefail
          test "$(go fmt ./... | tee /dev/stderr | wc -l)" -eq 0
      - name: Run test
        run: go test -v -cover -coverprofile=coverprofile ./...
      - name: Create coverage report
        run: go tool cover -html=coverprofile -o coverage.html
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: runner-coverage
          path: ./coverage.html
          retention-days: 1

  build-runner:
    needs:
      - go-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Install Required Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y make
      - name: Build
        run: |
          cd runner
          make
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: runner
          path: ./runner/premises-runner
          retention-days: 1

  test-controlpanel-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./controlpanel
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
      - uses: actions/cache/restore@v4
        id: cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-controlpanel-${{ hashFiles('controlpanel/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-controlpanel-
      - name: Install dependencies
        run: |
          npm ci
      - uses: actions/cache/save@v4
        if: ${{ steps.cache.outputs.cache-hit != 'true' && !startsWith(github.ref_name, 'dependabot/') }}
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-controlpanel-${{ hashFiles('controlpanel/package-lock.json') }}
      - name: Check code formatted
        run: |
          npm run fmt:check
          npm run lint:check
      - name: Run unit tests
        run: |
          npm test

  build-controlpanel:
    needs:
      - test-controlpanel-frontend
      - go-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # project root
          tags: ghcr.io/kofuk/premises:latest
          outputs: type=docker,dest=image.tar
          cache-from: type=gha
          cache-to: ${{ !startsWith(github.ref_name, 'dependabot/') && 'type=gha,mode=max' }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: control-panel-image
          path: image.tar
          retention-days: 1

  check-all-ok:
    runs-on: ubuntu-latest
    needs:
      - build-runner
      - build-controlpanel
    steps:
      - run: echo ok

  publish-binaries:
    runs-on: ubuntu-latest
    needs: check-all-ok
    if: github.ref_name == 'master'
    permissions:
      id-token: write
      contents: read
    env:
      RUNNER_SCHEMA: '3'
    steps:
      - name: Install Required Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y tar
      - name: Download runner
        uses: actions/download-artifact@v4
        with:
          name: runner
      - name: Make binaries executable
        run: |
          chmod +x premises-runner
      - name: Create Archive
        run : |
          tar -czf "premises-runner@v${RUNNER_SCHEMA}.tar.gz" premises-runner
      - name: Generate metadata
        run: |
          echo ${{ github.sha }} >"version@v${RUNNER_SCHEMA}.txt"
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GOOGLE_SERVICE_ACCOUNT }}
      - uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: premises-runner@v${{ env.RUNNER_SCHEMA }}.tar.gz
          destination: premises
          parent: false
          process_gcloudignore: false
      - uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: version@v${{ env.RUNNER_SCHEMA }}.txt
          destination: premises
          parent: false
          process_gcloudignore: false


  publish-controlpanel-docker-image:
    runs-on: ubuntu-latest
    needs: check-all-ok
    if: github.ref_name == 'master'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: control-panel-image
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Load image
        run: docker load --input image.tar
      - name: Push image
        run: docker push ghcr.io/kofuk/premises:latest

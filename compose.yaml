x-common-settings: &settings
  PREMISES_CONOHA_USERNAME:
  PREMISES_CONOHA_PASSWORD:
  PREMISES_CONOHA_TENANT_ID:
  PREMISES_CONOHA_IDENTITY_SERVICE:
  PREMISES_CONOHA_COMPUTE_SERVICE:
  PREMISES_CONOHA_NETWORK_SERVICE:
  PREMISES_CONOHA_VOLUME_SERVICE:
  PREMISES_CONOHA_NAME_TAG:
  S3_ENDPOINT:
  S3_BUCKET:
  AWS_ACCESS_KEY_ID:
  AWS_SECRET_ACCESS_KEY:
  PREMISES_GAME_OPERATORS:
  PREMISES_GAME_WHITELIST:
  PREMISES_SECRET:
  PREMISES_ALLOWED_ORIGIN:
  PREMISES_REDIS_ADDRESS: redis:6379
  PREMISES_REDIS_PASSWORD: ''
  PREMISES_POSTGRES_ADDRESS: postgres:5432
  PREMISES_POSTGRES_USER: premises
  PREMISES_POSTGRES_PASSWORD: password
  PREMISES_POSTGRES_DB: premises
  PREMISES_PROXY_API_ENDPOINT: http://proxy:8001
  PREMISES_GAME_DOMAIN:
  PREMISES_ICON_URL:

services:
  web:
    image: 'ghcr.io/kofuk/premises:latest'
    environment:
      <<: *settings
      PREMISES_MODE: web
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: always
    ports:
      - '8000:8000'
  proxy:
    image: 'ghcr.io/kofuk/premises:latest'
    environment:
      <<: *settings
      PREMISES_MODE: proxy
    ports:
      - '25565:25565'
  redis:
    image: 'redis:7-alpine'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 30s
      retries: 30
    restart: always
  postgres:
    image: 'postgres:15-alpine'
    environment:
      - POSTGRES_USER=premises
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=premises
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-Upremises"]
      interval: 1s
      timeout: 30s
      retries: 30
    volumes:
      - db:/var/lib/postgresql/data

volumes:
  db:

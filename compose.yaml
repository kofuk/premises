x-common-settings: &settings
  PREMISES_CONOHA_USERNAME:
  PREMISES_CONOHA_PASSWORD:
  PREMISES_CONOHA_TENANT_ID:
  PREMISES_CONOHA_IDENTITY_SERVICE:
  PREMISES_CONOHA_COMPUTE_SERVICE:
  PREMISES_CONOHA_VOLUME_SERVICE:
  PREMISES_CONOHA_IMAGE_SERVICE:
  PREMISES_CONOHA_NAME_TAG:
  PREMISES_S3_BUCKET:
  PREMISES_S3_FORCE_PATH_STYLE:
  AWS_ACCESS_KEY_ID:
  AWS_SECRET_ACCESS_KEY:
  AWS_REGION:
  AWS_ENDPOINT_URL:
  PREMISES_GAME_OPERATORS:
  PREMISES_GAME_WHITELIST:
  PREMISES_SECRET:
  PREMISES_ALLOWED_ORIGIN:
  PREMISES_REDIS_ADDRESS: redis:6379
  PREMISES_REDIS_PASSWORD: ''
  PREMISES_POSTGRES_ADDRESS: postgres:5432
  PREMISES_POSTGRES_USER: premises
  PREMISES_POSTGRES_DB: premises
  PREMISES_GAME_DOMAIN:
  PREMISES_ICON_URL:

services:
  web:
    image: ghcr.io/kofuk/premises:latest
    environment:
      <<: *settings
      PREMISES_MODE: web
    read_only: true
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: always
    ports:
      - '8000:8000'
  proxy:
    image: ghcr.io/kofuk/premises:latest
    environment:
      <<: *settings
      PREMISES_MODE: proxy
      PREMISES_PROXY_BACKEND_ADDRESS:
    read_only: true
    ports:
      - '25530:25530'
      - '25565:25565'
  cron:
    image: ghcr.io/kofuk/premises:latest
    environment:
      <<: *settings
      PREMISES_MODE: cron
    read_only: true
  redis:
    image: valkey/valkey:8
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 1s
      timeout: 30s
      retries: 30
    restart: always
    volumes:
      - redis:/data
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: premises
      POSTGRES_DB: premises
      POSTGRES_HOST_AUTH_METHOD: trust
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-Upremises"]
      interval: 1s
      timeout: 30s
      retries: 30
    volumes:
      - db:/var/lib/postgresql/data

volumes:
  db:
  redis:
